name: Deploy Streaming Imports

on:
  workflow_call:
    inputs:
      subscription:
        required: true
        type: string
      storageName:
        required: true
        type: string
      containerName:
        required: true
        type: string
      src:
        required: true
        type: string
      dest:
        required: true
        type: string
      contentCache:
        required: true
        type: string
      buildFlags:
        required: false
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true
  
############
# Set Jobs #
############
jobs:
  ##############
  # Define Job #
  ##############
  deploy-streaming-imports:
    name: ${{ github.repository }}
    runs-on: ubuntu-latest

    ##############
    # Load Steps #
    ##############
    steps:
      #################
      # Checkout Code #
      #################
      - name: Checkout Code
        uses: actions/checkout@v2
      
      ##############
      # Setup Node #
      ##############
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      
      ################
      # Install Deps #
      ################
      - name: Install Deps
        working-directory: .
        shell: bash
        run: npm install

      #########
      # Build #
      #########
      - name: Build
        working-directory: .
        shell: bash
        run: npm run build ${{ inputs.buildFlags }}
      
      ###############
      # Azure Login #
      ###############
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          allow-no-subscriptions: true
      
      ##########
      # Deploy #
      ##########
      - name: Deploy
        working-directory: .
        shell: bash
        run: |
          az account set --subscription ${{ inputs.subscription }}
          az storage blob upload-batch --account-name ${{ inputs.storageName }} --source '${{ inputs.src }}' --destination '${{ inputs.containerName }}/${{ inputs.dest }}' --auth-mode key --content-cache '${{ inputs.contentCache }}'
